#!/usr/bin/env python

import time
import pygame
import sys
from geometry_msgs.msg import Twist
import rospy
import random
import threading

MAX_LINEAR_SPEED = 0.2 # m/s
MAX_ANGULAR_SPEED = 0.4 # rad/s


rospy.init_node('ranger_teleop')
twist = rospy.Publisher('/cmd_vel', Twist)
rospy.loginfo("ROS Ranger interface started")

done = False

def key_callback(key_unicode):
    global done

    if key_unicode == unicode('\x03'):
        # Ctr + c
        done = True
    elif key_unicode == unicode('\x1b'):
        # ESC -> abort, abort, abort!
        done = True
    elif key_unicode == unicode('\r'):
        # Enter
        pass

v = 0.0
w = 0.0

msg = Twist()

pygame.init()


clock = pygame.time.Clock()



pygame.joystick.init()
joystick_count = pygame.joystick.get_count()

if joystick_count == 0:
    rospy.logerr("Plug your joystick!")
    sys.exit(1)

joystick = pygame.joystick.Joystick(0)
joystick.init()


#### WE ARE READY!

v_prev = 0.0
w_prev = 0.0
eye_prev = 0.0

while not rospy.is_shutdown() and not done:

    event = pygame.event.poll() # User did something


    if event.type == pygame.JOYBUTTONDOWN:

        if event.button == 8:
            print("Leaving now")
            done = True

    elif event.type == pygame.JOYAXISMOTION:

        if event.axis in [0,1]:
            w = -joystick.get_axis( 0 ) * MAX_ANGULAR_SPEED
            v = -joystick.get_axis( 1 ) * MAX_LINEAR_SPEED

    elif event.type == pygame.KEYDOWN:
        rospy.logdebug('key down: {0}'.format(event))
        # do work
        key_callback(event.unicode)

    elif event.type == pygame.NOEVENT:
        clock.tick(20) # limit framerate to 20Hz


    ###############

    if w != w_prev or v != v_prev:
        rospy.logdebug("V:%s      W:%s" % (v,w))

        msg.linear.x = v
        msg.angular.z = w
        twist.publish(msg)
        v_prev = v
        w_prev = w


## Quitting...
pygame.quit ()


